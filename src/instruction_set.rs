#[allow(non_camel_case_types)]
enum Instruction {
    AALOAD,
    AASTORE,
    ACONST_NULL,
    ALOAD,
    ALOAD_0,
    ALOAD_1,
    ALOAD_2,
    ALOAD_3,
    ANEWARRAY,
    ARETURN,
    ARRAYLENGTH,
    ASTORE,
    ASTORE_0,
    ASTORE_1,
    ASTORE_2,
    ASTORE_3,
    ATHROW,
    BALOAD,
    BASTORE,
    BIPUSH,
    CALOAD,
    CASTORE,
    CHECKCAST,
    D2F,
    D2I,
    D2L,
    DADD,
    DALOAD,
    DASTORE,
    DCMPG,
    DCMPL,
    DCONST_0,
    DCONST_1,
    DDIV,
    DLOAD,
    DLOAD_0,
    DLOAD_1,
    DLOAD_2,
    DLOAD_3,
    DMUL,
    DNEG,
    DREM,
    DRETURN,
    DSTORE,
    DSTORE_0,
    DSTORE_1,
    DSTORE_2,
    DSTORE_3,
    DSUB,
    DUP,
    DUP_X1,
    DUP_X2,
    DUP2,
    DUP2_X1,
    DUP2_X2,
    F2D,
    F2I,
    F2L,
    FADD,
    FALOAD,
    FASTORE,
    FCMPG,
    FCMPL,
    FCONST_0,
    FCONST_1,
    FCONST_2,
    FDIV,
    FLOAD,
    FLOAD_0,
    FLOAD_1,
    FLOAD_2,
    FLOAD_3,
    FMUL,
    FNEG,
    FREM,
    FRETURN,
    FSTORE,
    FSTORE_0,
    FSTORE_1,
    FSTORE_2,
    FSTORE_3,
    FSUB,
    GETFIELD,
    GETSTATIC,
    GOTO,
    GOTO_W,
    I2B,
    I2C,
    I2D,
    I2F,
    I2L,
    I2S,
    IADD,
    IALOAD,
    IAND,
    IASTORE,
    ICONST_M1,
    ICONST_0,
    ICONST_1,
    ICONST_2,
    ICONST_3,
    ICONST_4,
    ICONST_5,
    IDIV,
    IF_ACMPEQ,
    IF_ACMPNE,
    IF_ICMPEQ,
    IF_ICMPNE,
    IF_ICMPLT,
    IF_ICMPGE,
    IF_ICMPGT,
    IF_ICMPLE,
    IFEQ,
    IFNE,
    IFLT,
    IFGE,
    IFGT,
    IFLE,
    IFNONNULL,
    IFNULL,
    IINC,
    ILOAD,
    ILOAD_0,
    ILOAD_1,
    ILOAD_2,
    ILOAD_3,
    IMUL,
    INEG,
    INSTANCEOF,
    INVOKEDYNAMIC,
    INVOKEINTERFACE,
    INVOKESPECIAL,
    INVOKESTATIC,
    INVOKEVIRTUAL,
    IOR,
    IREM,
    IRETURN,
    ISHL,
    ISHR,
    ISTORE,
    ISTORE_0,
    ISTORE_1,
    ISTORE_2,
    ISTORE_3,
    ISUB,
    IUSHR,
    IXOR,
    JSR,
    JSR_W,
    L2D,
    L2F,
    L2I,
    LADD,
    LALOAD,
    LAND,
    LASTORE,
    LCMP,
    LCONST_0,
    LCONST_1,
    LDC,
    LDC_W,
    LDC2_W,
    LDIV,
    LLOAD,
    LLOAD_0,
    LLOAD_1,
    LLOAD_2,
    LLOAD_3,
    LMUL,
    LNEG,
    LOOKUPSWITCH,
    LOR,
    LREM,
    LRETURN,
    LSHL,
    LSHR,
    LSTORE,
    LSTORE_0,
    LSTORE_1,
    LSTORE_2,
    LSTORE_3,
    LSUB,
    LUSHR,
    LXOR,
    MONITORENTER,
    MONITOREXIT,
    MULTIANEWARRAY,
    NEW,
    NEWARRAY,
    NOP,
    POP,
    POP2,
    PUTFIELD,
    PUTSTATIC,
    RET,
    RETURN,
    SALOAD,
    SASTORE,
    SIPUSH,
    SWAP,
    TABLESWITCH,
    WIDE,
}

impl Instruction {
    pub fn from(binary: u16) -> Instruction {
        match binary {
            0x32 => Instruction::AALOAD,
            0x53 => Instruction::AASTORE,
            0x1 => Instruction::ACONST_NULL,
            0x19 => Instruction::ALOAD,
            0x2a => Instruction::ALOAD_0,
            0x2b => Instruction::ALOAD_1,
            0x2c => Instruction::ALOAD_2,
            0x2d => Instruction::ALOAD_3,
            0xbd => Instruction::ANEWARRAY,
            0xb0 => Instruction::ARETURN,
            0xbe => Instruction::ARRAYLENGTH,
            0x3a => Instruction::ASTORE,
            0x4b => Instruction::ASTORE_0,
            0x4c => Instruction::ASTORE_1,
            0x4d => Instruction::ASTORE_2,
            0x4e => Instruction::ASTORE_3,
            0xbf => Instruction::ATHROW,
            0x33 => Instruction::BALOAD,
            0x54 => Instruction::BASTORE,
            0x10 => Instruction::BIPUSH,
            0x34 => Instruction::CALOAD,
            0x55 => Instruction::CASTORE,
            0xc0 => Instruction::CHECKCAST,
            0x90 => Instruction::D2F,
            0x8e => Instruction::D2I,
            0x8f => Instruction::D2L,
            0x63 => Instruction::DADD,
            0x31 => Instruction::DALOAD,
            0x52 => Instruction::DASTORE,
            0x98 => Instruction::DCMPG,
            0x97 => Instruction::DCMPL,
            0xe => Instruction::DCONST_0,
            0xf => Instruction::DCONST_1,
            0x6f => Instruction::DDIV,
            0x18 => Instruction::DLOAD,
            0x26 => Instruction::DLOAD_0,
            0x27 => Instruction::DLOAD_1,
            0x28 => Instruction::DLOAD_2,
            0x29 => Instruction::DLOAD_3,
            0x6b => Instruction::DMUL,
            0x77 => Instruction::DNEG,
            0x73 => Instruction::DREM,
            0xaf => Instruction::DRETURN,
            0x39 => Instruction::DSTORE,
            0x47 => Instruction::DSTORE_0,
            0x48 => Instruction::DSTORE_1,
            0x49 => Instruction::DSTORE_2,
            0x4a => Instruction::DSTORE_3,
            0x67 => Instruction::DSUB,
            0x59 => Instruction::DUP,
            0x5a => Instruction::DUP_X1,
            0x5b => Instruction::DUP_X2,
            0x5c => Instruction::DUP2,
            0x5d => Instruction::DUP2_X1,
            0x5e => Instruction::DUP2_X2,
            0x8d => Instruction::F2D,
            0x8b => Instruction::F2I,
            0x8c => Instruction::F2L,
            0x62 => Instruction::FADD,
            0x30 => Instruction::FALOAD,
            0x51 => Instruction::FASTORE,
            0x96 => Instruction::FCMPG,
            0x95 => Instruction::FCMPL,
            0xb => Instruction::FCONST_0,
            0xc => Instruction::FCONST_1,
            0xd => Instruction::FCONST_2,
            0x6e => Instruction::FDIV,
            0x17 => Instruction::FLOAD,
            0x22 => Instruction::FLOAD_0,
            0x23 => Instruction::FLOAD_1,
            0x24 => Instruction::FLOAD_2,
            0x25 => Instruction::FLOAD_3,
            0x6a => Instruction::FMUL,
            0x76 => Instruction::FNEG,
            0x72 => Instruction::FREM,
            0xae => Instruction::FRETURN,
            0x38 => Instruction::FSTORE,
            0x43 => Instruction::FSTORE_0,
            0x44 => Instruction::FSTORE_1,
            0x45 => Instruction::FSTORE_2,
            0x46 => Instruction::FSTORE_3,
            0x66 => Instruction::FSUB,
            0xb4 => Instruction::GETFIELD,
            0xb2 => Instruction::GETSTATIC,
            0xa7 => Instruction::GOTO,
            0xc8 => Instruction::GOTO_W,
            0x91 => Instruction::I2B,
            0x92 => Instruction::I2C,
            0x87 => Instruction::I2D,
            0x86 => Instruction::I2F,
            0x85 => Instruction::I2L,
            0x93 => Instruction::I2S,
            0x60 => Instruction::IADD,
            0x2e => Instruction::IALOAD,
            0x7e => Instruction::IAND,
            0x4f => Instruction::IASTORE,
            0x2 => Instruction::ICONST_M1,
            0x3 => Instruction::ICONST_0,
            0x4 => Instruction::ICONST_1,
            0x5 => Instruction::ICONST_2,
            0x6 => Instruction::ICONST_3,
            0x7 => Instruction::ICONST_4,
            0x8 => Instruction::ICONST_5,
            0x6c => Instruction::IDIV,
            0xa5 => Instruction::IF_ACMPEQ,
            0xa6 => Instruction::IF_ACMPNE,
            0x9f => Instruction::IF_ICMPEQ,
            0xa0 => Instruction::IF_ICMPNE,
            0xa1 => Instruction::IF_ICMPLT,
            0xa2 => Instruction::IF_ICMPGE,
            0xa3 => Instruction::IF_ICMPGT,
            0xa4 => Instruction::IF_ICMPLE,
            0x99 => Instruction::IFEQ,
            0x9a => Instruction::IFNE,
            0x9b => Instruction::IFLT,
            0x9c => Instruction::IFGE,
            0x9d => Instruction::IFGT,
            0x9e => Instruction::IFLE,
            0xc7 => Instruction::IFNONNULL,
            0xc6 => Instruction::IFNULL,
            0x84 => Instruction::IINC,
            0x15 => Instruction::ILOAD,
            0x1a => Instruction::ILOAD_0,
            0x1b => Instruction::ILOAD_1,
            0x1c => Instruction::ILOAD_2,
            0x1d => Instruction::ILOAD_3,
            0x68 => Instruction::IMUL,
            0x74 => Instruction::INEG,
            0xc1 => Instruction::INSTANCEOF,
            0xba => Instruction::INVOKEDYNAMIC,
            0xb9 => Instruction::INVOKEINTERFACE,
            0xb7 => Instruction::INVOKESPECIAL,
            0xb8 => Instruction::INVOKESTATIC,
            0xb6 => Instruction::INVOKEVIRTUAL,
            0x80 => Instruction::IOR,
            0x70 => Instruction::IREM,
            0xac => Instruction::IRETURN,
            0x78 => Instruction::ISHL,
            0x7a => Instruction::ISHR,
            0x36 => Instruction::ISTORE,
            0x3b => Instruction::ISTORE_0,
            0x3c => Instruction::ISTORE_1,
            0x3d => Instruction::ISTORE_2,
            0x3e => Instruction::ISTORE_3,
            0x64 => Instruction::ISUB,
            0x7c => Instruction::IUSHR,
            0x82 => Instruction::IXOR,
            0xa8 => Instruction::JSR,
            0xc9 => Instruction::JSR_W,
            0x8a => Instruction::L2D,
            0x89 => Instruction::L2F,
            0x88 => Instruction::L2I,
            0x61 => Instruction::LADD,
            0x2f => Instruction::LALOAD,
            0x7f => Instruction::LAND,
            0x50 => Instruction::LASTORE,
            0x94 => Instruction::LCMP,
            0x9 => Instruction::LCONST_0,
            0xa => Instruction::LCONST_1,
            0x12 => Instruction::LDC,
            0x13 => Instruction::LDC_W,
            0x14 => Instruction::LDC2_W,
            0x6d => Instruction::LDIV,
            0x16 => Instruction::LLOAD,
            0x1e => Instruction::LLOAD_0,
            0x1f => Instruction::LLOAD_1,
            0x20 => Instruction::LLOAD_2,
            0x21 => Instruction::LLOAD_3,
            0x69 => Instruction::LMUL,
            0x75 => Instruction::LNEG,
            0xab => Instruction::LOOKUPSWITCH,
            0x81 => Instruction::LOR,
            0x71 => Instruction::LREM,
            0xad => Instruction::LRETURN,
            0x79 => Instruction::LSHL,
            0x7b => Instruction::LSHR,
            0x37 => Instruction::LSTORE,
            0x3f => Instruction::LSTORE_0,
            0x40 => Instruction::LSTORE_1,
            0x41 => Instruction::LSTORE_2,
            0x42 => Instruction::LSTORE_3,
            0x65 => Instruction::LSUB,
            0x7d => Instruction::LUSHR,
            0x83 => Instruction::LXOR,
            0xc2 => Instruction::MONITORENTER,
            0xc3 => Instruction::MONITOREXIT,
            0xc5 => Instruction::MULTIANEWARRAY,
            0xbb => Instruction::NEW,
            0xbc => Instruction::NEWARRAY,
            0x0 => Instruction::NOP,
            0x57 => Instruction::POP,
            0x58 => Instruction::POP2,
            0xb5 => Instruction::PUTFIELD,
            0xb3 => Instruction::PUTSTATIC,
            0xa9 => Instruction::RET,
            0xb1 => Instruction::RETURN,
            0x35 => Instruction::SALOAD,
            0x56 => Instruction::SASTORE,
            0x11 => Instruction::SIPUSH,
            0x5f => Instruction::SWAP,
            0xaa => Instruction::TABLESWITCH,
            0xc4 => Instruction::WIDE,
            _ => panic!("No such instruction: {:x}", binary),
        }
    }
}
