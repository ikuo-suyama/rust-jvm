#[allow(non_camel_case_types)]
#[derive(Debug)]
pub enum Instruction {
    AALOAD = 0x32,
    AASTORE = 0x53,
    ACONST_NULL = 0x1,
    ALOAD = 0x19,
    ALOAD_0 = 0x2a,
    ALOAD_1 = 0x2b,
    ALOAD_2 = 0x2c,
    ALOAD_3 = 0x2d,
    ANEWARRAY = 0xbd,
    ARETURN = 0xb0,
    ARRAYLENGTH = 0xbe,
    ASTORE = 0x3a,
    ASTORE_0 = 0x4b,
    ASTORE_1 = 0x4c,
    ASTORE_2 = 0x4d,
    ASTORE_3 = 0x4e,
    ATHROW = 0xbf,
    BALOAD = 0x33,
    BASTORE = 0x54,
    BIPUSH = 0x10,
    CALOAD = 0x34,
    CASTORE = 0x55,
    CHECKCAST = 0xc0,
    D2F = 0x90,
    D2I = 0x8e,
    D2L = 0x8f,
    DADD = 0x63,
    DALOAD = 0x31,
    DASTORE = 0x52,
    DCMPG = 0x98,
    DCMPL = 0x97,
    DCONST_0 = 0xe,
    DCONST_1 = 0xf,
    DDIV = 0x6f,
    DLOAD = 0x18,
    DLOAD_0 = 0x26,
    DLOAD_1 = 0x27,
    DLOAD_2 = 0x28,
    DLOAD_3 = 0x29,
    DMUL = 0x6b,
    DNEG = 0x77,
    DREM = 0x73,
    DRETURN = 0xaf,
    DSTORE = 0x39,
    DSTORE_0 = 0x47,
    DSTORE_1 = 0x48,
    DSTORE_2 = 0x49,
    DSTORE_3 = 0x4a,
    DSUB = 0x67,
    DUP = 0x59,
    DUP_X1 = 0x5a,
    DUP_X2 = 0x5b,
    DUP2 = 0x5c,
    DUP2_X1 = 0x5d,
    DUP2_X2 = 0x5e,
    F2D = 0x8d,
    F2I = 0x8b,
    F2L = 0x8c,
    FADD = 0x62,
    FALOAD = 0x30,
    FASTORE = 0x51,
    FCMPG = 0x96,
    FCMPL = 0x95,
    FCONST_0 = 0xb,
    FCONST_1 = 0xc,
    FCONST_2 = 0xd,
    FDIV = 0x6e,
    FLOAD = 0x17,
    FLOAD_0 = 0x22,
    FLOAD_1 = 0x23,
    FLOAD_2 = 0x24,
    FLOAD_3 = 0x25,
    FMUL = 0x6a,
    FNEG = 0x76,
    FREM = 0x72,
    FRETURN = 0xae,
    FSTORE = 0x38,
    FSTORE_0 = 0x43,
    FSTORE_1 = 0x44,
    FSTORE_2 = 0x45,
    FSTORE_3 = 0x46,
    FSUB = 0x66,
    GETFIELD = 0xb4,
    GETSTATIC = 0xb2,
    GOTO = 0xa7,
    GOTO_W = 0xc8,
    I2B = 0x91,
    I2C = 0x92,
    I2D = 0x87,
    I2F = 0x86,
    I2L = 0x85,
    I2S = 0x93,
    IADD = 0x60,
    IALOAD = 0x2e,
    IAND = 0x7e,
    IASTORE = 0x4f,
    ICONST_M1 = 0x2,
    ICONST_0 = 0x3,
    ICONST_1 = 0x4,
    ICONST_2 = 0x5,
    ICONST_3 = 0x6,
    ICONST_4 = 0x7,
    ICONST_5 = 0x8,
    IDIV = 0x6c,
    IF_ACMPEQ = 0xa5,
    IF_ACMPNE = 0xa6,
    IF_ICMPEQ = 0x9f,
    IF_ICMPNE = 0xa0,
    IF_ICMPLT = 0xa1,
    IF_ICMPGE = 0xa2,
    IF_ICMPGT = 0xa3,
    IF_ICMPLE = 0xa4,
    IFEQ = 0x99,
    IFNE = 0x9a,
    IFLT = 0x9b,
    IFGE = 0x9c,
    IFGT = 0x9d,
    IFLE = 0x9e,
    IFNONNULL = 0xc7,
    IFNULL = 0xc6,
    IINC = 0x84,
    ILOAD = 0x15,
    ILOAD_0 = 0x1a,
    ILOAD_1 = 0x1b,
    ILOAD_2 = 0x1c,
    ILOAD_3 = 0x1d,
    IMUL = 0x68,
    INEG = 0x74,
    INSTANCEOF = 0xc1,
    INVOKEDYNAMIC = 0xba,
    INVOKEINTERFACE = 0xb9,
    INVOKESPECIAL = 0xb7,
    INVOKESTATIC = 0xb8,
    INVOKEVIRTUAL = 0xb6,
    IOR = 0x80,
    IREM = 0x70,
    IRETURN = 0xac,
    ISHL = 0x78,
    ISHR = 0x7a,
    ISTORE = 0x36,
    ISTORE_0 = 0x3b,
    ISTORE_1 = 0x3c,
    ISTORE_2 = 0x3d,
    ISTORE_3 = 0x3e,
    ISUB = 0x64,
    IUSHR = 0x7c,
    IXOR = 0x82,
    JSR = 0xa8,
    JSR_W = 0xc9,
    L2D = 0x8a,
    L2F = 0x89,
    L2I = 0x88,
    LADD = 0x61,
    LALOAD = 0x2f,
    LAND = 0x7f,
    LASTORE = 0x50,
    LCMP = 0x94,
    LCONST_0 = 0x9,
    LCONST_1 = 0xa,
    LDC = 0x12,
    LDC_W = 0x13,
    LDC2_W = 0x14,
    LDIV = 0x6d,
    LLOAD = 0x16,
    LLOAD_0 = 0x1e,
    LLOAD_1 = 0x1f,
    LLOAD_2 = 0x20,
    LLOAD_3 = 0x21,
    LMUL = 0x69,
    LNEG = 0x75,
    LOOKUPSWITCH = 0xab,
    LOR = 0x81,
    LREM = 0x71,
    LRETURN = 0xad,
    LSHL = 0x79,
    LSHR = 0x7b,
    LSTORE = 0x37,
    LSTORE_0 = 0x3f,
    LSTORE_1 = 0x40,
    LSTORE_2 = 0x41,
    LSTORE_3 = 0x42,
    LSUB = 0x65,
    LUSHR = 0x7d,
    LXOR = 0x83,
    MONITORENTER = 0xc2,
    MONITOREXIT = 0xc3,
    MULTIANEWARRAY = 0xc5,
    NEW = 0xbb,
    NEWARRAY = 0xbc,
    NOP = 0x0,
    POP = 0x57,
    POP2 = 0x58,
    PUTFIELD = 0xb5,
    PUTSTATIC = 0xb3,
    RET = 0xa9,
    RETURN = 0xb1,
    SALOAD = 0x35,
    SASTORE = 0x56,
    SIPUSH = 0x11,
    SWAP = 0x5f,
    TABLESWITCH = 0xaa,
    WIDE = 0xc4,
}

impl Instruction {
    pub fn from(binary: u8) -> Instruction {
        match binary {
            0x32 => Instruction::AALOAD,
            0x53 => Instruction::AASTORE,
            0x1 => Instruction::ACONST_NULL,
            0x19 => Instruction::ALOAD,
            0x2a => Instruction::ALOAD_0,
            0x2b => Instruction::ALOAD_1,
            0x2c => Instruction::ALOAD_2,
            0x2d => Instruction::ALOAD_3,
            0xbd => Instruction::ANEWARRAY,
            0xb0 => Instruction::ARETURN,
            0xbe => Instruction::ARRAYLENGTH,
            0x3a => Instruction::ASTORE,
            0x4b => Instruction::ASTORE_0,
            0x4c => Instruction::ASTORE_1,
            0x4d => Instruction::ASTORE_2,
            0x4e => Instruction::ASTORE_3,
            0xbf => Instruction::ATHROW,
            0x33 => Instruction::BALOAD,
            0x54 => Instruction::BASTORE,
            0x10 => Instruction::BIPUSH,
            0x34 => Instruction::CALOAD,
            0x55 => Instruction::CASTORE,
            0xc0 => Instruction::CHECKCAST,
            0x90 => Instruction::D2F,
            0x8e => Instruction::D2I,
            0x8f => Instruction::D2L,
            0x63 => Instruction::DADD,
            0x31 => Instruction::DALOAD,
            0x52 => Instruction::DASTORE,
            0x98 => Instruction::DCMPG,
            0x97 => Instruction::DCMPL,
            0xe => Instruction::DCONST_0,
            0xf => Instruction::DCONST_1,
            0x6f => Instruction::DDIV,
            0x18 => Instruction::DLOAD,
            0x26 => Instruction::DLOAD_0,
            0x27 => Instruction::DLOAD_1,
            0x28 => Instruction::DLOAD_2,
            0x29 => Instruction::DLOAD_3,
            0x6b => Instruction::DMUL,
            0x77 => Instruction::DNEG,
            0x73 => Instruction::DREM,
            0xaf => Instruction::DRETURN,
            0x39 => Instruction::DSTORE,
            0x47 => Instruction::DSTORE_0,
            0x48 => Instruction::DSTORE_1,
            0x49 => Instruction::DSTORE_2,
            0x4a => Instruction::DSTORE_3,
            0x67 => Instruction::DSUB,
            0x59 => Instruction::DUP,
            0x5a => Instruction::DUP_X1,
            0x5b => Instruction::DUP_X2,
            0x5c => Instruction::DUP2,
            0x5d => Instruction::DUP2_X1,
            0x5e => Instruction::DUP2_X2,
            0x8d => Instruction::F2D,
            0x8b => Instruction::F2I,
            0x8c => Instruction::F2L,
            0x62 => Instruction::FADD,
            0x30 => Instruction::FALOAD,
            0x51 => Instruction::FASTORE,
            0x96 => Instruction::FCMPG,
            0x95 => Instruction::FCMPL,
            0xb => Instruction::FCONST_0,
            0xc => Instruction::FCONST_1,
            0xd => Instruction::FCONST_2,
            0x6e => Instruction::FDIV,
            0x17 => Instruction::FLOAD,
            0x22 => Instruction::FLOAD_0,
            0x23 => Instruction::FLOAD_1,
            0x24 => Instruction::FLOAD_2,
            0x25 => Instruction::FLOAD_3,
            0x6a => Instruction::FMUL,
            0x76 => Instruction::FNEG,
            0x72 => Instruction::FREM,
            0xae => Instruction::FRETURN,
            0x38 => Instruction::FSTORE,
            0x43 => Instruction::FSTORE_0,
            0x44 => Instruction::FSTORE_1,
            0x45 => Instruction::FSTORE_2,
            0x46 => Instruction::FSTORE_3,
            0x66 => Instruction::FSUB,
            0xb4 => Instruction::GETFIELD,
            0xb2 => Instruction::GETSTATIC,
            0xa7 => Instruction::GOTO,
            0xc8 => Instruction::GOTO_W,
            0x91 => Instruction::I2B,
            0x92 => Instruction::I2C,
            0x87 => Instruction::I2D,
            0x86 => Instruction::I2F,
            0x85 => Instruction::I2L,
            0x93 => Instruction::I2S,
            0x60 => Instruction::IADD,
            0x2e => Instruction::IALOAD,
            0x7e => Instruction::IAND,
            0x4f => Instruction::IASTORE,
            0x2 => Instruction::ICONST_M1,
            0x3 => Instruction::ICONST_0,
            0x4 => Instruction::ICONST_1,
            0x5 => Instruction::ICONST_2,
            0x6 => Instruction::ICONST_3,
            0x7 => Instruction::ICONST_4,
            0x8 => Instruction::ICONST_5,
            0x6c => Instruction::IDIV,
            0xa5 => Instruction::IF_ACMPEQ,
            0xa6 => Instruction::IF_ACMPNE,
            0x9f => Instruction::IF_ICMPEQ,
            0xa0 => Instruction::IF_ICMPNE,
            0xa1 => Instruction::IF_ICMPLT,
            0xa2 => Instruction::IF_ICMPGE,
            0xa3 => Instruction::IF_ICMPGT,
            0xa4 => Instruction::IF_ICMPLE,
            0x99 => Instruction::IFEQ,
            0x9a => Instruction::IFNE,
            0x9b => Instruction::IFLT,
            0x9c => Instruction::IFGE,
            0x9d => Instruction::IFGT,
            0x9e => Instruction::IFLE,
            0xc7 => Instruction::IFNONNULL,
            0xc6 => Instruction::IFNULL,
            0x84 => Instruction::IINC,
            0x15 => Instruction::ILOAD,
            0x1a => Instruction::ILOAD_0,
            0x1b => Instruction::ILOAD_1,
            0x1c => Instruction::ILOAD_2,
            0x1d => Instruction::ILOAD_3,
            0x68 => Instruction::IMUL,
            0x74 => Instruction::INEG,
            0xc1 => Instruction::INSTANCEOF,
            0xba => Instruction::INVOKEDYNAMIC,
            0xb9 => Instruction::INVOKEINTERFACE,
            0xb7 => Instruction::INVOKESPECIAL,
            0xb8 => Instruction::INVOKESTATIC,
            0xb6 => Instruction::INVOKEVIRTUAL,
            0x80 => Instruction::IOR,
            0x70 => Instruction::IREM,
            0xac => Instruction::IRETURN,
            0x78 => Instruction::ISHL,
            0x7a => Instruction::ISHR,
            0x36 => Instruction::ISTORE,
            0x3b => Instruction::ISTORE_0,
            0x3c => Instruction::ISTORE_1,
            0x3d => Instruction::ISTORE_2,
            0x3e => Instruction::ISTORE_3,
            0x64 => Instruction::ISUB,
            0x7c => Instruction::IUSHR,
            0x82 => Instruction::IXOR,
            0xa8 => Instruction::JSR,
            0xc9 => Instruction::JSR_W,
            0x8a => Instruction::L2D,
            0x89 => Instruction::L2F,
            0x88 => Instruction::L2I,
            0x61 => Instruction::LADD,
            0x2f => Instruction::LALOAD,
            0x7f => Instruction::LAND,
            0x50 => Instruction::LASTORE,
            0x94 => Instruction::LCMP,
            0x9 => Instruction::LCONST_0,
            0xa => Instruction::LCONST_1,
            0x12 => Instruction::LDC,
            0x13 => Instruction::LDC_W,
            0x14 => Instruction::LDC2_W,
            0x6d => Instruction::LDIV,
            0x16 => Instruction::LLOAD,
            0x1e => Instruction::LLOAD_0,
            0x1f => Instruction::LLOAD_1,
            0x20 => Instruction::LLOAD_2,
            0x21 => Instruction::LLOAD_3,
            0x69 => Instruction::LMUL,
            0x75 => Instruction::LNEG,
            0xab => Instruction::LOOKUPSWITCH,
            0x81 => Instruction::LOR,
            0x71 => Instruction::LREM,
            0xad => Instruction::LRETURN,
            0x79 => Instruction::LSHL,
            0x7b => Instruction::LSHR,
            0x37 => Instruction::LSTORE,
            0x3f => Instruction::LSTORE_0,
            0x40 => Instruction::LSTORE_1,
            0x41 => Instruction::LSTORE_2,
            0x42 => Instruction::LSTORE_3,
            0x65 => Instruction::LSUB,
            0x7d => Instruction::LUSHR,
            0x83 => Instruction::LXOR,
            0xc2 => Instruction::MONITORENTER,
            0xc3 => Instruction::MONITOREXIT,
            0xc5 => Instruction::MULTIANEWARRAY,
            0xbb => Instruction::NEW,
            0xbc => Instruction::NEWARRAY,
            0x0 => Instruction::NOP,
            0x57 => Instruction::POP,
            0x58 => Instruction::POP2,
            0xb5 => Instruction::PUTFIELD,
            0xb3 => Instruction::PUTSTATIC,
            0xa9 => Instruction::RET,
            0xb1 => Instruction::RETURN,
            0x35 => Instruction::SALOAD,
            0x56 => Instruction::SASTORE,
            0x11 => Instruction::SIPUSH,
            0x5f => Instruction::SWAP,
            0xaa => Instruction::TABLESWITCH,
            0xc4 => Instruction::WIDE,
            _ => panic!("No such instruction: {:x}", binary),
        }
    }
}
